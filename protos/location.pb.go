// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: protos/location.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	X  int32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y  int32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_location_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_protos_location_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_protos_location_proto_rawDescGZIP(), []int{0}
}

func (x *Client) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Client) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Client) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

var File_protos_location_proto protoreflect.FileDescriptor

var file_protos_location_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0x34, 0x0a, 0x06, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x79, 0x32, 0x39, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x0a, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_location_proto_rawDescOnce sync.Once
	file_protos_location_proto_rawDescData = file_protos_location_proto_rawDesc
)

func file_protos_location_proto_rawDescGZIP() []byte {
	file_protos_location_proto_rawDescOnce.Do(func() {
		file_protos_location_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_location_proto_rawDescData)
	})
	return file_protos_location_proto_rawDescData
}

var file_protos_location_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protos_location_proto_goTypes = []interface{}{
	(*Client)(nil), // 0: v1.Client
}
var file_protos_location_proto_depIdxs = []int32{
	0, // 0: v1.LocationDelivery.Deliver:input_type -> v1.Client
	0, // 1: v1.LocationDelivery.Deliver:output_type -> v1.Client
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_location_proto_init() }
func file_protos_location_proto_init() {
	if File_protos_location_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_location_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_location_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_location_proto_goTypes,
		DependencyIndexes: file_protos_location_proto_depIdxs,
		MessageInfos:      file_protos_location_proto_msgTypes,
	}.Build()
	File_protos_location_proto = out.File
	file_protos_location_proto_rawDesc = nil
	file_protos_location_proto_goTypes = nil
	file_protos_location_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LocationDeliveryClient is the client API for LocationDelivery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocationDeliveryClient interface {
	Deliver(ctx context.Context, in *Client, opts ...grpc.CallOption) (LocationDelivery_DeliverClient, error)
}

type locationDeliveryClient struct {
	cc grpc.ClientConnInterface
}

func NewLocationDeliveryClient(cc grpc.ClientConnInterface) LocationDeliveryClient {
	return &locationDeliveryClient{cc}
}

func (c *locationDeliveryClient) Deliver(ctx context.Context, in *Client, opts ...grpc.CallOption) (LocationDelivery_DeliverClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LocationDelivery_serviceDesc.Streams[0], "/v1.LocationDelivery/Deliver", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationDeliveryDeliverClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LocationDelivery_DeliverClient interface {
	Recv() (*Client, error)
	grpc.ClientStream
}

type locationDeliveryDeliverClient struct {
	grpc.ClientStream
}

func (x *locationDeliveryDeliverClient) Recv() (*Client, error) {
	m := new(Client)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LocationDeliveryServer is the server API for LocationDelivery service.
type LocationDeliveryServer interface {
	Deliver(*Client, LocationDelivery_DeliverServer) error
}

// UnimplementedLocationDeliveryServer can be embedded to have forward compatible implementations.
type UnimplementedLocationDeliveryServer struct {
}

func (*UnimplementedLocationDeliveryServer) Deliver(*Client, LocationDelivery_DeliverServer) error {
	return status.Errorf(codes.Unimplemented, "method Deliver not implemented")
}

func RegisterLocationDeliveryServer(s *grpc.Server, srv LocationDeliveryServer) {
	s.RegisterService(&_LocationDelivery_serviceDesc, srv)
}

func _LocationDelivery_Deliver_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Client)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LocationDeliveryServer).Deliver(m, &locationDeliveryDeliverServer{stream})
}

type LocationDelivery_DeliverServer interface {
	Send(*Client) error
	grpc.ServerStream
}

type locationDeliveryDeliverServer struct {
	grpc.ServerStream
}

func (x *locationDeliveryDeliverServer) Send(m *Client) error {
	return x.ServerStream.SendMsg(m)
}

var _LocationDelivery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.LocationDelivery",
	HandlerType: (*LocationDeliveryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Deliver",
			Handler:       _LocationDelivery_Deliver_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/location.proto",
}
